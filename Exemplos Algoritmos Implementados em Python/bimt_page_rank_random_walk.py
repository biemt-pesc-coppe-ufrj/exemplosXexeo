# -*- coding: utf-8 -*-
"""bimt-page-rank-random-walk.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oiYSym3sPGMc-zks5CzR3_kbIVKHdtqN
"""

from random import random
from random import randint

np.set_printoptions(precision=3)
np.set_printoptions(suppress=True)

"""# Configuração Inicial"""

PASSOS = 1000000

A = [[0,0,.5,0,.5],
     [.5,0,.5,0,0],
     [0,.5,0,.5,0],
     [.5,0,0,0,.5],
     [0,0,1,0,0]]


#A = [[.02, 0.02, 0.88, 0.02, 0.02, 0.02, 0.02],
#     [0.02, 0.45, 0.45, 0.02, 0.02, 0.02, 0.02],
#     [0.31, 0.02, 0.31, 0.31, 0.02, 0.02, 0.02],
#     [0.02, 0.02, 0.02, 0.45, 0.45, 0.02, 0.02],
#     [0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.88],
#     [0.02, 0.02, 0.02, 0.02, 0.02, 0.45, 0.45],
#     [0.02, 0.02, 0.02, 0.31, 0.31, 0.02, 0.31]]

p = .86

n = len(A)

DEF_SIZE = 50

def center(s,size=DEF_SIZE):
  tam = (size - len(s))//2
  return " "*tam+s

def print_line(char="=",size=DEF_SIZE):
  print(char*size)

"""# Fazendo o Random Walk"""

def pick_next(node,M=A,P=p):
  x = random()
  if x>P:
    #print("x",end="")
    return randint(0,n-1)
  else:
    total = M[node][0]
    y = random()
    for i in range(len(M[node])):
      if y <= total:
        return i
      total += M[node][i+1]
  print("hem?",x,i)

conta = [0]*n
node = randint(0,n-1)


for i in range(PASSOS):
  conta[node] += 1
  node = pick_next(node)
  #print(f"{node} ",end="")

conta2 = list(map(lambda x: x/PASSOS,conta))
total = sum(conta2)

result_rw = np.array(conta2)

print(result_rw)

"""# Preparações para formas de cálculo"""

import numpy as np
from scipy.linalg import eig

Ar = np.array(A,float)


print(Ar)

"""# Usando a matriz do Pagerank passo a passo"""

e = np.ones((n,1),float)
et = e.transpose()
E = e*et/n
print(e,et,E)

PrM = p*Ar+(1-p)*E

print(PrM)

xc = e / n
xct = et /n
PASSOSM = 400

for i in range(PASSOSM):
  xct = xct.dot(PrM)
  xct = xct/sum(sum(xct))
  
result_passo = np.array(xct)

print(result_passo)

"""# Usando os autovetores"""

xv = e / n

w,vl,vr = eig(PrM,left=True)

result_av = np.array(vl[:,0]/sum(vl[:,0]))

print(result_av)

"""# Compara o resultado"""

resultados = [result_rw,result_passo,result_av]

for r in range(len(resultados)):
  print(resultados[r]/resultados[(r+1)%len(resultados)])